services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: proveedores_sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Your_strong_Pwd!123
    volumes:
      - sql_data:/var/opt/mssql
    healthcheck:
      test: ["CMD", "bash", "-c", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P 'Your_strong_Pwd!123' -No -C -Q 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  proveedores_api:
    build:
      context: ./src/Proveedores.Api
    container_name: proveedores_api
    depends_on:
      sqlserver:
        condition: service_healthy
    restart: always
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__Default=Server=sqlserver,1433;Database=ComprasDB;User ID=sa;Password=Your_strong_Pwd!123;TrustServerCertificate=True;
      - ASPNETCORE_ENVIRONMENT=Development
    expose:
      - "8080"
    # (opcional para probar desde tu host)
    ports:
     - "8080:8080"

  cloudflared:
    image: cloudflare/cloudflared:latest
    command: >
      tunnel
      --no-autoupdate
      --loglevel debug
      --protocol http2
      --url http://proveedores_api:8080
    environment:
      - TUNNEL_EDGE_IP_VERSION=4   # equivalente a forzar IPv4, soportado v√≠a env
    depends_on:
      - proveedores_api
    restart: unless-stopped



volumes:
  sql_data:


